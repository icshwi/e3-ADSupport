#
#  Copyright (c) 2017 - Present  European Spallation Source ERIC
#
#  The program is free software: you can redistribute
#  it and/or modify it under the terms of the GNU General Public License
#  as published by the Free Software Foundation, either version 2 of the
#  License, or any newer version.
#
#  This program is distributed in the hope that it will be useful, but WITHOUT
#  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
#  more details.
#
#  You should have received a copy of the GNU General Public License along with
#  this program. If not, see https://www.gnu.org/licenses/gpl-2.0.txt
#
# 
# Author  : williamledda
# email   : williamledda@esss.se
# Date    : generated by 2018Jan11-1718-18CET
# version : 0.0.0 
#
# template file is generated by ./prepare_module.bash with 673bad4dce8e231fad30e8f70c6cfa69dfd15130

# Please look at many other _module_.Makefile in e3-* repository
# 

where_am_I := $(dir $(abspath $(lastword $(MAKEFILE_LIST))))

ifdef ($(USE_ADSUPPORT_MAKEFILE))
	include Makefile
else
	include $(REQUIRE_TOOLS)/driver.makefile
	
	ADSUPPORT = ADSupport

#NETCDF_SUPP := $(ADSUPPORT)/supportApp/netCDFSrc
#JPG_SUPP    := $(ADSUPPORT)/supportApp/jpegSrc
#ZLIB_SUPP   := $(ADSUPPORT)/supportApp/zlibSrc

#Adding $ADSUPPORT at the beginning wildcard doesnÃ¬t work...
ZLIB_SUPP  = supportApp/zlibSrc
SZIP_SUPP  = supportApp/szipSrc

#Configure Makefile for zLib support
ifeq ($(WITH_ZLIB),YES)
  ifeq ($(ZLIB_EXTERNAL),NO)

    LIBRARY_IOC = zlib

    ifeq ($(SHARED_LIBRARIES),YES)
      USR_CFLAGS_WIN32 += -DZLIB_DLL
    endif

    # OS-specific files in os/ARCH
    #INC += zlib.h
    #INC += zconf.h
    
    #USR_INCLUDE_DEFAULT = -IsupportApp/zlibSrc/os/default
    #USR_INCLUDE_LINUX   = -IsupportApp/zlibSrc/os/linux
    
    HEADERS             += zlib.h
    HEADERS             += zconf.h

    #LIB_SRCS += adler32.c
    #LIB_SRCS += compress.c
    #LIB_SRCS += crc32.c
    #LIB_SRCS += deflate.c
    #LIB_SRCS += gzclose.c
    #LIB_SRCS += gzlib.c
    #LIB_SRCS += gzread.c
    #LIB_SRCS += gzwrite.c
    #LIB_SRCS += infback.c
    #LIB_SRCS += inffast.c
    #LIB_SRCS += inflate.c
    #LIB_SRCS += inftrees.c
    #LIB_SRCS += trees.c
    #LIB_SRCS += uncompr.c
    #LIB_SRCS += zutil.c
    
    SOURCES += $(wildcard $(ZLIB_SUPP)/*.c)

  endif # ($(ZLIB_EXTERNAL),NO)
  
#%:
#	@echo "WITH_ZLIB: ${WITH_ZLIB} -> ZLIB_EXTERNAL: $(ZLIB_EXTERNAL) SOURCES: $(SOURCES)"
endif # ($(WITH_ZLIB),YES)

ifeq ($(WITH_SZIP),YES)
  ifeq ($(SZIP_EXTERNAL),NO)

    LIBRARY_IOC = szip

    ifeq ($(SHARED_LIBRARIES),YES)
      USR_CFLAGS_WIN32 += -DSZ_BUILT_AS_DYNAMIC_LIB -Dszip_EXPORTS
    endif

    HEADERS += SZconfig.h
    HEADERS += rice.h
    HEADERS += ricehdf.h
    HEADERS += szip_adpt.h
    HEADERS += szlib.h
    
    SOURCES += $(wildcard $(SZIP_SUPP)/*.c)

#    SOURCES += encoding.c
#    SOURCES += rice.c
#    SOURCES += sz_api.c

  endif # ($(SZIP_EXTERNAL),NO)
endif # ($(WITH_SZIP),YES)

#%:
#	@#echo "CURDIR = ${CURDIR}; MODULE = ${MODULE}; MAKEVERSION = ${MAKE} -f ${USERMAKEFILE} LIBVERSION=${LIBVERSION}; DIRS = ${DIRS}"
#	@echo "WITH_ZLIB: ${WITH_ZLIB} -> ZLIB_EXTERNAL: $(ZLIB_EXTERNAL) SOURCES: $(SOURCES)"
#	@echo "WITH_SZIP: ${YES_SZIP} -> SZIP_EXTERNAL: $(SZIP_EXTERNAL) $(SZIP_SUPP) SOURCES: $(SOURCES)"
endif # USE_ADSUPPORT_MAKEFILE defined

# APP:=calcApp
# APPDB:=$(APP)/Db
# APPSRC:=$(APP)/src

# USR_INCLUDES += -I$(where_am_I)/$(APPSRC)

#USR_CFLAGS   += -Wno-unused-variable
#USR_CFLAGS   += -Wno-unused-function
#USR_CFLAGS   += -Wno-unused-but-set-variable
#USR_CPPFLAGS += -Wno-unused-variable
#USR_CPPFLAGS += -Wno-unused-function
#USR_CPPFLAGS += -Wno-unused-but-set-variable

# TEMPLATES += $(wildcard $(APPDB)/*.db)

# DBDINC_SRCS += $(APPSRC)/swaitRecord.c
# DBDINC_SRCS += $(APPSRC)/sseqRecord.c
# DBDINC_SRCS += $(APPSRC)/aCalcoutRecord.c
# DBDINC_SRCS += $(APPSRC)/sCalcoutRecord.c
# DBDINC_SRCS += $(APPSRC)/transformRecord.c

# DBDINC_DBDS = $(subst .c,.dbd,   $(DBDINC_SRCS:$(APPSRC)/%=%))
# DBDINC_HDRS = $(subst .c,.h,     $(DBDINC_SRCS:$(APPSRC)/%=%))
# DBDINC_DEPS = $(subst .c,$(DEP), $(DBDINC_SRCS:$(APPSRC)/%=%))


# HEADERS += $(APPSRC)/sCalcPostfix.h
# HEADERS += $(APPSRC)/aCalcPostfix.h
# HEADERS += $(DBDINC_HDRS)


# SOURCES += $(APPSRC)/sCalcPostfix.c
# SOURCES += $(APPSRC)/sCalcPerform.c
# SOURCES += $(APPSRC)/aCalcPostfix.c
# SOURCES += $(APPSRC)/aCalcPerform.c

# SOURCES += $(APPSRC)/calcUtil.c
# SOURCES += $(APPSRC)/myFreeListLib.c
# SOURCES += $(APPSRC)/devsCalcoutSoft.c
# SOURCES += $(APPSRC)/devaCalcoutSoft.c
# SOURCES += $(APPSRC)/subAve.c
# SOURCES += $(APPSRC)/swaitRecord.c
# SOURCES += $(APPSRC)/editSseq.st
# SOURCES += $(APPSRC)/interp.c
# SOURCES += $(APPSRC)/arrayTest.c
# SOURCES += $(APPSRC)/aCalcMonitorMem.c
# # DBDINC_SRCS should be last of the series of SOURCES
# SOURCES += $(DBDINC_SRCS)

# DBDS += $(APPSRC)/calcSupport_LOCAL.dbd
# DBDS += $(APPSRC)/calcSupport_withSNCSEQ.dbd
# DBDS += $(APPSRC)/calcSupport_withSSCAN.dbd


# $(DBDINC_DEPS): $(DBDINC_HDRS)

#.dbd.h:
#	echo $(DBTORECORDTYPEH) $(USR_DBDFLAGS) $<
#	$(DBTORECORDTYPEH)  $(USR_DBDFLAGS) -o  $<


# The following lines could be useful if one uses the external lib
#
# Examples...
# 
# USR_CFLAGS += -fPIC
# USR_CFLAGS   += -DDEBUG_PRINT
# USR_CPPFLAGS += -DDEBUG_PRINT
# USR_CPPFLAGS += -DUSE_TYPED_RSET
# USR_INCLUDES += -I/usr/include/libusb-1.0
# USR_LDFLAGS += -lusb-1.0
# USR_LDFLAGS += -L /opt/etherlab/lib
# USR_LDFLAGS += -lethercat
# USR_LDFLAGS += -Wl,-rpath=/opt/etherlab/lib

## SYSTEM LIBS 
##
# USR_LIBS += boost_regex
# USR_LIBS += readline
# USR_LIBS += xml2

#


